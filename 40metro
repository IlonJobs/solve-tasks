def wfs(V1,V2):
    if V1==V2:
        return 0
    visited = set()
    visited.add(V1)
    r[0]=[V1]
    for i,ver in enumerate(r):
        for v in ver:
            for neighbor in graph[v]:
                if neighbor==V2:
                    return i+1
                if neighbor not in visited:
                    r[i+1].append(neighbor)
                    visited.add(neighbor)
    else:
        return -1

with open('input.txt', 'r') as fin :
    N = int(fin.readline().strip())    
    M = int(fin.readline().strip())
    metromap={}
    for l in range(1,M+1):
        line = list(map(int,fin.readline().strip().split(' ')))
        #key = line[0]
        stations = line[1:]
        metromap[l] = stations
    route = list(map(int,fin.readline().strip().split(' ')))
    begin = route[0]
    end = route[1]
beginstations=set()
endstations=set()
#формируем граф пересечений линий метро
graph=[[] for _ in range(M+1)]

for l in range(1,M+1):
    if begin in metromap[l] and end in metromap[l]:
        #маршрут на одной ветке
        pass
    if begin in metromap[l]:
        beginstations.add(l)
    if end in metromap[l]:
        endstations.add(l)        
    for l2 in range(l+1,M+1):
        c = list(set(metromap[l]) & set(metromap[l2]))
        if len(c)>0:
            graph[l].append(l2)
            graph[l2].append(l)

#ищем маршрут с минимальным количеством пересадок
ans = M
for b in beginstations:
    for e in endstations:
        r = [[] for _ in range(M)]
        ans = min(ans,wfs(b,e))
    
print(ans)
